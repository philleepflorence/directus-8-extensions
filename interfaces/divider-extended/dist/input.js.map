{"version":3,"sources":["../node_modules/@directus/extension-toolkit/mixins/interface.js","input.vue"],"names":[],"mappings":";AAAA,OAAA,QAAA,CACA,MAAA,CAIA,GAAA,CACA,KAAA,OACA,UAAA,GAGA,KAAA,CACA,KAAA,OACA,UAAA,GAIA,MAAA,CACA,KAAA,KACA,QAAA,MAGA,KAAA,CACA,KAAA,OACA,UAAA,GAGA,OAAA,CACA,KAAA,CAAA,OAAA,QACA,QAAA,MAGA,SAAA,CACA,KAAA,QACA,SAAA,GAGA,SAAA,CACA,KAAA,QACA,SAAA,GAGA,QAAA,CACA,KAAA,OACA,QAAA,KAAA,KAGA,QAAA,CACA,KAAA,QACA,SAAA,GAIA,SAAA,CACA,KAAA,OACA,QAAA,MAGA,OAAA,CACA,KAAA,OACA,QAAA,MAIA,OAAA,CACA,KAAA,OACA,QAAA;;ACnCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EADA,IAAA,EAAA,EAAA,QAAA,iDACA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CACA,KAAA,mBACA,OAAA,CAAA,EAAA,SACA,KAAA,WACA,MAAA,CACA,QAAA,CACA,KAAA,CACA,KAAA,wBAGA,QAAA,KACA,MAAA,KACA,UAAA,EACA,SAAA,EACA,OAAA,EACA,QAAA,OAGA,SAAA,CACA,OAAA,WACA,OAAA,KAAA,QAAA,qBAEA,KAAA,QAAA,QAEA,aAAA,WACA,OAAA,KAAA,OAAA,OAGA,QAAA,CACA,KAAA,WAAA,IAAA,EAAA,KACA,GAAA,KAAA,QAAA,SAAA,CAEA,GAAA,KAAA,SAAA,OAAA,KAAA,OAAA,EAEA,KAAA,SAAA,EAGA,KAAA,KAAA,IAAA,IAAA,KAAA,QAAA,UACA,KAAA,SAAA,GAEA,EAAA,SAAA,EAEA,EAAA,QAAA,EAAA,KAEA,EAAA,MAAA,EAAA,MAAA,GAAA,OAAA,EAAA,QAAA,MAAA,OAAA,OAAA,EAAA,OACA,EAAA,MAAA,EAAA,QAAA,MAEA,EAAA,UAAA,EAAA,QAAA,EAAA,SAEA,EAAA,OAAA,EAEA,EAAA,QAAA,KAAA,UAAA,CACA,OAAA,wBAGA,EAAA,UAAA,IAEA,MAAA,SAAA,GACA,EAAA,MAAA,EAEA,EAAA,SAAA,MAGA,aAAA,WACA,KAAA,OAAA,KAhEA,QAAA,QAAA","file":"input.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","<template>\n\t<div class=\"interface-divider\">\n\t\t<div :class=\"[`${options.style}-style`, { margin: options.margin }]\">\n\t\t\t<section class=\"interface-divider\">\n\t\t\t\t<h2 v-if=\"options.title\">{{ options.title }}</h2>\n\t\t\t\t<hr v-if=\"options.hr\" />\n\t\t\t\t<p class=\"description\" v-if=\"options.description\" v-html=\"options.description\"></p>\n\t\t\t\t<a href=\"#\" class=\"button primary\" v-if=\"options.button\" @click.prevent=\"load\" v-html=\"button\"></a>\n\t\t\t</section>\n\t\t\t\n\t\t\t<v-modal \n\t\t\t\tv-if=\"modal\" \n\t\t\t\t:title=\"title\"\n\t\t\t\t:buttons=\"buttons\"\n\t\t\t\t@close=\"onCloseModal\"\n\t\t\t\t@done=\"onCloseModal\">\n\t\t\t\t<div class=\"interface-url-modal\">\n\t\t\t\t\t<div class=\"interface-divider-content\" v-if=\"content\">\n\t\t\t\t\t\t<div class=\"content\" v-html=\"content\"></div>\n\t\t\t\t\t\t<p class=\"updated small\" v-html=\"updated\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"interface-divider-content\" v-else>Something went wrong, unable to load content!</div>\n\t\t\t\t</div>\n\t\t\t</v-modal>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport mixin from '@directus/extension-toolkit/mixins/interface';\n\texport default {\n\t\tname: \"InterfaceDivider\",\n\t\tmixins: [mixin],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tbuttons: {\n\t\t\t\t\tdone: {\n\t\t\t\t\t\ttext: \"Close Modal Overlay\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontent: null,\n\t\t\t\ttitle: null,\n\t\t\t\texisting: false,\n\t\t\t\tloading: false,\n\t\t\t\tmodal: false,\n\t\t\t\tupdated: null\n\t\t\t};\n\t\t},\n\t\tcomputed: {\n\t\t\tbutton () {\n\t\t\t\tif (this.loading) return `Loading Content...`;\n\t\t\t\t\n\t\t\t\treturn this.options.button;\n\t\t\t},\n\t\t\tdisplayValue () {\n\t\t\t\treturn this.value || '--';\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tload () {\n\t\t\t\tif (!this.options.endpoint) return;\n\t\t\t\t\n\t\t\t\tif (this.existing) return this.modal = true;\n\t\t\t\t\n\t\t\t\tthis.loading = true;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tthis.$api.api.get(this.options.endpoint)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\t\n\t\t\t\t\tthis.content = response.body;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (response.title) this.title = `${ this.options.title } - ${ response.title }`;\n\t\t\t\t\telse this.title = this.options.title;\n\t\t\t\t\t\n\t\t\t\t\tif (response.updated) this.updated = response.updated;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tthis.modal = true;\n\t\t\t\t\t\n\t\t\t\t\tthis.$events.emit(\"success\", {\n\t\t\t\t\t\tnotify: `Content Downloaded!`\n\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tthis.existing = true;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.error = error;\n\t\t\t\t\t\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonCloseModal () {\n\t\t\t\tthis.modal = false;\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<style lang=\"scss\">\n\t.interface-divider \n\t{\n\t\tposition: relative;\n\t\t\n\t\t.small-style {\n\t\t\tposition: relative;\n\t\t\tpadding-top: 12px;\n\t\t\t\n\t\t\t&.margin {\n\t\t\t\tmargin-top: 48px;\n\t\t\t}\n\t\t\n\t\t\tsection.interface-divider \n\t\t\t{\n\t\t\t\th2 {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttransform: translateX(-50%);\n\t\t\t\t\tcolor: var(--heading-text-color);\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tline-height: 18px;\n\t\t\t\t\tbackground-color: var(--page-background-color);\n\t\t\t\t\tpadding: 0 12px;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 28px;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttransform: translateX(-50%);\n\t\t\t\t\tcolor: var(--note-text-color);\n\t\t\t\t\tfont-size: var(--input-font-size);\n\t\t\t\t\tmax-width: 560px;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t.medium-style {\n\t\t\tpadding-top: 12px;\n\t\t\t\n\t\t\t&.margin {\n\t\t\t\tmargin-top: 48px;\n\t\t\t}\n\t\t\n\t\t\tsection.interface-divider \n\t\t\t{\n\t\t\t\th2 {\n\t\t\t\t\tcolor: var(--heading-text-color);\n\t\t\t\t\tfont-size: 22px;\n\t\t\t\t\tline-height: 28px;\n\t\t\t\t\tfont-weight: 400;\n\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\tcolor: var(--note-text-color);\n\t\t\t\t\tmax-width: 560px;\n\t\t\t\t\tmargin-top: 12px;\n\t\t\t\t\tfont-size: var(--input-font-size);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\t\t\t\t\n\t\t}\n\t\t.large-style {\n\t\t\tpadding-top: 12px;\n\t\t\t\n\t\t\t&.margin {\n\t\t\t\tmargin-top: 48px;\n\t\t\t}\n\t\t\n\t\t\tsection.interface-divider \n\t\t\t{\n\t\t\t\th2 {\n\t\t\t\t\tcolor: var(--heading-text-color);\n\t\t\t\t\tfont-size: 28px;\n\t\t\t\t\tline-height: 32px;\n\t\t\t\t\tfont-weight: 300;\n\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\tcolor: var(--note-text-color);\n\t\t\t\t\tfont-size: var(--input-font-size);\n\t\t\t\t\tmax-width: 768px;\n\t\t\t\t\tmargin-top: 16px;\n\t\t\t\t\tline-height: 1.4em;\n\t\t\t\t\t\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tcontent: \"\";\n\t\t\t\t\t    border-bottom: 2px solid var(--main-primary-color);\n\t\t\t\t\t    width: 1rem;\n\t\t\t\t\t    display: block;\n\t\t\t\t\t    margin-top: 1rem;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\ta.button {\n\t\t    color: var(--main-primary-color);\n\t\t\tdisplay: inline-block;\n\t\t    font-size: 1rem;\n\t\t    font-weight: 500;\n\t\t    margin-top: 1rem;\n\t\t    text-decoration: none;\n\t\t}\n\t\thr {\n\t\t\tborder: 0;\n\t\t\tbackground: none;\n\t\t\tborder-bottom: 2px solid var(--input-border-color);\n\t\t}\n\t\t.interface-divider-content\n\t\t{\n\t\t\tpadding: 2rem;\n\t\t\t\n\t\t\th1, .h1 {\n\t\t\t\tfont-size: 2.5rem;\n\t\t\t\tfont-weight: 300;\n\t\t\t\t\n\t\t\t\t& + p {\n\t\t\t\t\tfont-size: 1.5rem;\n\t\t\t\t\tfont-weight: 300;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\th2, .h2 {\n\t\t\t\tfont-size: 1.65rem;\n\t\t\t}\n\t\t\t\n\t\t\th3, .h3 {\n\t\t\t\tfont-size: 1.35rem;\n\t\t\t}\n\t\t\t\n\t\t\th4, h5, h6,\n\t\t\t.h4, .h5, .h6 {\n\t\t\t\tfont-size: 1.15rem;\n\t\t\t}\n\t\t\t\n\t\t\th1, h2, h3, h4, h5, h6,\n\t\t\t.h1, .h2, .h3, .h4, .h5, .h6 {\n\t\t\t\tcolor: var(--blue-grey-500);\n\t\t\t\tfont-family: var(--main-font-accent);\n\t\t\t\tline-height: 1.5em;\n\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t\t\n\t\t\t\t&:not(:first-child) {\n\t\t\t\t\tmargin-top: 1.75em;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: var(--main-primary-color) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t& + hr {\n\t\t\t\t\tmargin-top: 0 !important;\n\t\t\t\t\tmargin-bottom: 0.5rem !important;\n\t\t\t\t\t\n\t\t\t\t\t& + p {\n\t\t\t\t\t\tcolor: var(--blue-grey-500);\n\t\t\t\t\t\tfont-size: 1.3rem;\n\t\t\t\t\t\tfont-weight: 300;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tp {\n\t\t\t\t&:not(:only-child) {\n\t\t\t\t\tmargin-bottom: 1em;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&:empty {\n\t\t\t\t\tdisplay: none !important;\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&:only-child {\n\t\t\t\t\tcolor: var(--blue-grey-500);\n\t\t\t\t\tfont-size: 2rem;\n\t\t\t\t\tfont-weight: 300;\n\t\t\t\t\tline-height: 2.5rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\ta {\n\t\t\t\tcolor: var(--main-primary-color) !important;\n\t\t\t\tfont-weight: 500;\n\t\t\t\t\n\t\t\t\t&[href*=\"netlify\"] {\n\t\t\t\t\tdisplay: none !important;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\timg {\n\t\t\t\tdisplay: block;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t\t\n\t\t\t\t&[width=\"100\"] {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thr {\n\t\t\t\tborder: 0;\n\t\t\t\tbackground: none;\n\t\t\t\tborder-bottom: 2px solid var(--input-border-color);\n\t\t\t\tmargin: 1.5rem 0;\n\t\t\t}\n\t\t\t\n\t\t\tstrong {\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\t\t\t\n\t\t\tol, p, ul {\n\t\t\t    line-height: 2rem;\n\t\t\t}\n\t\t\t\n\t\t\tol, ul, video {\n\t\t\t    & + p {\n\t\t\t\t    margin-top: 1em;\n\t\t\t    }\n\t\t\t}\n\t\t\t\n\t\t\tol, ul {\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tblockquote {\n\t\t\t    font-size: 1rem;\n\t\t\t    color: var(--blue-grey-500);\n\t\t\t    border-left: .2rem solid var(--main-primary-color);\n\t\t\t    margin: 1rem 0;\n\t\t\t    padding: .25rem 0 .25rem 1rem;\n\t\t\t    \n\t\t\t    &[data-tip] {\n\t\t\t\t    background-color: var(--blue-grey-800);\n\t\t\t\t\tborder-left-width: .3rem;\n\t\t\t\t\tborder-left-style: solid;\n\t\t\t\t\tcolor: var(--blue-grey-300);\n\t\t\t\t\tfont-size: 1.2rem;\n\t\t\t\t\tfont-weight: 400;\n\t\t\t\t\tline-height: 2rem;\n\t\t\t\t    padding: 1.5rem;\n\t\t\t    }\n\t\t\t    \n\t\t\t    p {\n\t\t\t\t    margin: 0 !important;\n\t\t\t\t    \n\t\t\t\t    &:first-child:not(:only-child):not(:last-child):not(:empty) {\n\t\t\t\t\t    font-family: var(--main-font-accent);\n\t\t\t\t\t    font-size: 1.5rem;\n\t\t\t\t\t    font-weight: 500;\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    &:not(:empty) + p {\n\t\t\t\t\t    margin-top: 1em !important;\n\t\t\t\t    }\n\t\t\t    }\n\t\t\t}\n\t\t\t\n\t\t\tpre {\n\t\t\t\tfont-family: Consolas, Monaco, Andale Mono, Ubuntu Mono, monospace;\n\t\t\t\tfont-size: 12px;\n\t\t\t\tposition: relative;\n\t\t\t\tbackground-color: rgba(black, 0.4);\n\t\t\t\tline-height: 1.4;\n\t\t\t    padding: 1.25rem 1.5rem;\n\t\t\t    margin: .85rem 0;\n\t\t\t    overflow: auto;\n\t\t\t}\n\t\t\t\n\t\t\ttable {\n\t\t\t\tborder-collapse: collapse;\n\t\t\t    margin: 1rem 0;\n\t\t\t    display: block;\n\t\t\t    overflow-x: auto;\n\t\t\t    \n\t\t\t    tr {\n\t\t\t\t    border-top: 1px solid var(--blue-grey-800);\n\t\t\t\t    \n\t\t\t\t    td, th {\n\t\t\t\t\t    border: 1px solid var(--blue-grey-800);\n\t\t\t\t\t\tpadding: .6em 1em;\n\t\t\t\t\t\ttext-align: left;\n\t\t\t\t    }\n\t\t\t    }\n\t\t\t}\n\n\t\t}\n\t}\n</style>"]}